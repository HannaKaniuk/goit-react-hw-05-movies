{"version":3,"file":"static/js/544.364efe6b.chunk.js","mappings":"yNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAOzBC,EAAOJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+cAmBhBG,EAAON,EAAAA,GAAAA,GAASO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sQAUhBK,EAAQR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wEAMlBO,EAAOV,EAAAA,GAAAA,EAAQW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2LAWfS,EAAYZ,EAAAA,GAAAA,EAAQa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mJ,GAUTH,EAAAA,GAAAA,EAAQc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,2F,iBCvDnBY,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACvBC,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,KAAChB,EAAI,CAAAiB,SACFJ,EAAOK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAWH,EAAXG,YAAaC,EAAYJ,EAAZI,aAAY,OACjDC,EAAAA,EAAAA,MAACtB,EAAI,CAAAe,SAAA,EACHO,EAAAA,EAAAA,MAAC7B,EAAU,CAAC8B,GAAE,WAAAC,OAAaN,GAAMO,MAAO,CAAEC,KAAMd,GAAWG,SAAA,EACzDD,EAAAA,EAAAA,KAACZ,EAAK,CACJyB,MAAM,QACNC,OAAO,QACPC,IACET,EAAW,kCAAAI,OAC2BJ,GAXlD,gFAcUU,IAAKX,KAEPL,EAAAA,EAAAA,KAACV,EAAI,CAAAW,SAAEI,QAETG,EAAAA,EAAAA,MAAChB,EAAS,CAAAS,SAAA,CAAC,gBAAcgB,KAAKC,MAAqB,GAAfX,GAAmB,SAd9CH,EAeJ,KAIf,C,8LCnCMe,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGlB,IAAMC,EAAiB,eAAAzB,GAAA0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENT,EAAAA,EAAAA,IAAU,qBAAsB,CACrDU,OAAQ,CACNC,QAASZ,EACTa,SAAU,WAEX,KAAD,EALU,OAKVP,EAAAE,EAAAM,KALMP,EAAID,EAAJC,KAAIC,EAAAO,OAAA,SAOLR,EAAKS,SAAO,OAE4B,MAF5BR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEnBU,QAAQC,MAAM,yBAAwBX,EAAAS,IAAST,EAAAS,GAAA,yBAAAT,EAAAY,OAAA,GAAAf,EAAA,kBAGlD,kBAd6B,OAAA5B,EAAA4C,MAAA,KAAAC,UAAA,KAiBjBC,EAAiB,eAAAvC,GAAAmB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoB,EAAMC,GAAK,IAAAC,EAAAnB,EAAA,OAAAH,IAAAA,MAAA,SAAAuB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAEjBT,EAAAA,EAAAA,IAAU,eAAgB,CAC/CU,OAAQ,CACNC,QAASZ,EACTyB,MAAAA,EACAZ,SAAU,WAEX,KAAD,EANU,OAMVa,EAAAC,EAAAb,KANMP,EAAImB,EAAJnB,KAAIoB,EAAAZ,OAAA,SAOLR,EAAKS,SAAO,OAE4B,MAF5BW,EAAAlB,KAAA,EAAAkB,EAAAV,GAAAU,EAAA,SAEnBT,QAAQC,MAAM,yBAAwBQ,EAAAV,IAASU,EAAAV,GAAA,yBAAAU,EAAAP,OAAA,GAAAI,EAAA,kBAGlD,gBAd6BI,GAAA,OAAA5C,EAAAqC,MAAA,KAAAC,UAAA,KAgBjBO,EAAgB,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,EAAMC,GAAO,IAAAC,EAAA1B,EAAA,OAAAH,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAElBT,EAAAA,EAAAA,IAAU,SAADV,OAAUyC,GAAW,CACnDrB,OAAQ,CACNC,QAASZ,EACTa,SAAU,WAEX,KAAD,EALU,OAKVoB,EAAAC,EAAApB,KALMP,EAAI0B,EAAJ1B,KAAI2B,EAAAnB,OAAA,SAMLR,GAAI,OAE+C,MAF/C2B,EAAAzB,KAAA,EAAAyB,EAAAjB,GAAAiB,EAAA,SAEXhB,QAAQC,MAAM,oCAAmCe,EAAAjB,IAASiB,EAAAjB,GAAA,yBAAAiB,EAAAd,OAAA,GAAAW,EAAA,kBAG7D,gBAb4BI,GAAA,OAAAL,EAAAT,MAAA,KAAAC,UAAA,KAehBc,EAAW,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAMN,GAAO,IAAAO,EAAAhC,EAAA,OAAAH,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAEbT,EAAAA,EAAAA,IAAU,SAADV,OAAUyC,EAAO,YAAY,CAC3DrB,OAAQ,CACNC,QAASZ,EACTa,SAAU,WAEX,KAAD,EALU,OAKV0B,EAAAC,EAAA1B,KALMP,EAAIgC,EAAJhC,KAAIiC,EAAAzB,OAAA,SAMLR,EAAKkC,MAAI,OAE6B,MAF7BD,EAAA/B,KAAA,EAAA+B,EAAAvB,GAAAuB,EAAA,SAEhBtB,QAAQC,MAAM,uBAAsBqB,EAAAvB,IAASuB,EAAAvB,GAAA,yBAAAuB,EAAApB,OAAA,GAAAkB,EAAA,kBAGhD,gBAbuBI,GAAA,OAAAL,EAAAhB,MAAA,KAAAC,UAAA,KAeXqB,EAAY,eAAAC,GAAAzC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyC,EAAMb,GAAO,IAAAc,EAAAvC,EAAA,OAAAH,IAAAA,MAAA,SAAA2C,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAEdT,EAAAA,EAAAA,IAAU,SAADV,OAAUyC,EAAO,YAAY,CAC3DrB,OAAQ,CACNC,QAASZ,EACTa,SAAU,WAEX,KAAD,EALU,OAKViC,EAAAC,EAAAjC,KALMP,EAAIuC,EAAJvC,KAAIwC,EAAAhC,OAAA,SAMLR,EAAKS,SAAO,OAE6B,MAF7B+B,EAAAtC,KAAA,EAAAsC,EAAA9B,GAAA8B,EAAA,SAEnB7B,QAAQC,MAAM,0BAAyB4B,EAAA9B,IAAS8B,EAAA9B,GAAA,yBAAA8B,EAAA3B,OAAA,GAAAyB,EAAA,kBAGnD,gBAbwBG,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,I,8FCnCzB,UA5Ba,WACX,IAAA2B,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCvE,EAAMyE,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAiB1B,OAhBAG,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXvD,EAAAA,EAAAA,MACGyD,MAAK,SAAAC,GACJP,EAAUO,EACZ,IACCC,OAAM,SAAA1C,GACLD,QAAQ4C,IAAI3C,EACd,IACC4C,SAAQ,WACPN,GAAW,EACb,GAGN,GAAG,KAEDpE,EAAAA,EAAAA,MAAC2E,EAAAA,GAAO,CAAAlF,SAAA,EACND,EAAAA,EAAAA,KAACoF,EAAAA,GAAS,CAAAnF,SAAC,oBACXD,EAAAA,EAAAA,KAACL,EAAAA,EAAY,CAACE,OAAQA,IACrB8E,IAAW3E,EAAAA,EAAAA,KAACqF,EAAAA,EAAM,MAGzB,C,kIC/BaF,EAAUvG,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAMpBqG,EAAYxG,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kDAKrBuG,EAAW1G,EAAAA,GAAAA,EAAQO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yF","sources":["components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","helppers/fetch.js","pages/Home/Home.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n \n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 65px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 15px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 40px;\n  }\n`;\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 5px;\n  border: 1px solid black;\n  overflow: hidden;\n  color: #89d0bc;\n  background-color: #89d0bc;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  color: black;\n  text-align: center;\n   margin-bottom: 10px;\n@media screen and (min-width: 768px) {\n   font-size: 24px;\n  }\n  }\n`;\nexport const TextScore = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: black;\n  text-align: center;\n  margin-bottom: 10px;\n  vertical-align: bottom;\n  }\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: black;\n  text-align: center;\n`;\n","import React from 'react';\nimport {\n  StyledLink,\n  List,\n  Item,\n  Photo,\n  Text,\n  TextScore,\n} from './TrendingList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  const defaultMovieImg =\n    'https://cdn.pixabay.com/photo/2012/08/27/22/59/movie-projector-55122_1280.png';\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path, vote_average }) => (\n        <Item key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <Photo\n              width=\"264px\"\n              height=\"384px\"\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultMovieImg\n              }\n              alt={title}\n            />\n            <Text>{title}</Text>\n          </StyledLink>\n          <TextScore>User Scrore: {Math.round(vote_average * 10)}%</TextScore>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = '4bfe9ac7b716325880075e348301b2b8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список найпопулярніших фільмів на сьогодні\nexport const fetchTrendingList = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day', {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trends:', error);\n    throw error;\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n// запит повної інформації про фільм для сторінки кінофільму\nexport const fetchMovieInform = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie information:', error);\n    throw error;\n  }\n};\n//запит інформації про акторський склад для сторінки кінофільму\nexport const fetchActors = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n//запит оглядів для сторінки кінофільму\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","import { TrendingList } from 'components/TrendingList/TrendingList';\nimport { fetchTrendingList } from 'helppers/fetch';\nimport React, { useEffect, useState } from 'react';\nimport { HomeDiv, HomeTitle } from './Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      fetchTrendingList()\n        .then(trendingMovies => {\n          setMovies(trendingMovies);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <HomeDiv>\n      <HomeTitle>Trending today</HomeTitle>\n      <TrendingList movies={movies} />\n      {loading && <Loader />}\n    </HomeDiv>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nexport const HomeDiv = styled.div`\n  background-color: #f2f2f2;\n  color: #333;\n  padding: 50px 100px;\n`;\n\nexport const HomeTitle = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: #333;\n  text-align: center;\n`;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Item","_templateObject3","Photo","_templateObject4","Text","_templateObject5","TextScore","_templateObject6","_templateObject7","TrendingList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","vote_average","_jsxs","to","concat","state","from","width","height","src","alt","Math","round","KEY","axios","fetchTrendingList","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","params","api_key","language","sent","abrupt","results","t0","console","error","stop","apply","arguments","fetchSearchMovies","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieInform","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchActors","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","useEffect","then","trendingMovies","catch","log","finally","HomeDiv","HomeTitle","Loader","TextInfo"],"sourceRoot":""}