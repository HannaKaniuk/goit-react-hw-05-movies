{"version":3,"file":"static/js/364.c021110a.chunk.js","mappings":"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","sources":["helppers/fetch.js","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4bfe9ac7b716325880075e348301b2b8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// список найпопулярніших фільмів на сьогодні\nexport const fetchTrendingList = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day', {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trends:', error);\n    throw error;\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n// запит повної інформації про фільм для сторінки кінофільму\nexport const fetchMovieInform = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie information:', error);\n    throw error;\n  }\n};\n//запит інформації про акторський склад для сторінки кінофільму\nexport const fetchActors = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n//запит оглядів для сторінки кінофільму\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  background: #f2f2f2;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ListGenres = styled.ul`\n  list-style-type: none;\n  display: flex;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const ImgWrp = styled.div`\n  display: flex;\n  justify-content: center;\n  // background: #f2f2f2;\n`;\n\nexport const InfoWrp = styled.div`\n  display: flex;\n  gap: 15px;\n  padding: 15px;\n  flex-direction: column;\n  p {\n    text-align: justify;\n  }\n`;\n\nexport const LinkInfo = styled(Link)`\n  display: block;\n  background-color: #ddd;\n  width: 100px;\n  text-align: center;\n  border: 1px solid #aaa;\n  border-radius: 5px;\n  text-decoration: none;\n  color: #333;\n  padding: 5px 35px 5px 35px;\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 15px;\n  &:hover {\n    background-color: #ccc;\n  }\n`;\n\nexport const AdditionalWrp = styled.div`\n  background: #f2f2f2;\n  padding: 10px 15px;\n  h3 {\n    margin-bottom: 15px;\n    color: #333;\n  }\n`;\n\nexport const LineDiv = styled.div`\n  border-top: 2px solid #ddd;\n  border-bottom: 2px solid #ddd;\n`;\n\nexport const Img = styled.img`\n  padding: 15px;\n  width: 350px;\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n`;\n\nexport const LinkBtn = styled(Link)`\n  display: flex;\n  justify-content: center;\n  gap: 6px;\n  width: 100px;\n  background-color: #ddd;\n  padding: 5px 15px 5px 15px;\n  border: 1px solid #aaa;\n  border-radius: 5px;\n  text-decoration: none;\n  color: #333;\n  font-weight: 700;\n  &:hover {\n    background-color: #ccc;\n  }\n`;\n\nexport const BackDiv = styled.div`\n  background: #f2f2f2;\n  padding-top: 15px;\n  padding-left: 15px;\n`;\n","import { fetchMovieInform } from 'helppers/fetch';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { FaArrowRotateLeft } from 'react-icons/fa6';\nimport { Outlet, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport {\n  MovieContainer,\n  List,\n  AdditionalWrp,\n  LinkInfo,\n  InfoWrp,\n  ImgWrp,\n  Img,\n  ListGenres,\n  LineDiv,\n  LinkBtn,\n  BackDiv,\n} from './MoviesDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const movieDetails = await fetchMovieInform(movieId);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const {\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo;\n\n  const releaseDate = release_date.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n  const defaultMovieImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      <BackDiv>\n        <LinkBtn onClick={() => navigate(-1)}>\n          Go back\n          <FaArrowRotateLeft />\n        </LinkBtn>\n      </BackDiv>\n      {loading && <Loader />}\n      {movieInfo && (\n        <MovieContainer>\n          <ImgWrp>\n            <Img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultMovieImg\n              }\n              alt={original_title}\n            />\n          </ImgWrp>\n          <InfoWrp>\n            <h2>\n              {title}({releaseDate})\n            </h2>\n            <p>User score: {userScore}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ListGenres>\n              {genres.map(({ name, id }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ListGenres>\n          </InfoWrp>\n        </MovieContainer>\n      )}\n      <AdditionalWrp>\n        <LineDiv>\n          <h3>Additional information</h3>\n          <List>\n            <li>\n              <LinkInfo to={`${location.pathname}/cast`}>Cast</LinkInfo>\n            </li>\n            <li>\n              <LinkInfo to={`${location.pathname}/reviews`}>Reviews</LinkInfo>\n            </li>\n          </List>\n        </LineDiv>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AdditionalWrp>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["KEY","axios","fetchTrendingList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","params","api_key","language","sent","abrupt","results","t0","console","error","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieInform","_ref3","_callee3","movieId","_yield$axios$get3","_context3","concat","_x2","fetchActors","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","MovieContainer","styled","_templateObject","_taggedTemplateLiteral","ListGenres","_templateObject2","List","_templateObject3","ImgWrp","_templateObject4","InfoWrp","_templateObject5","LinkInfo","Link","_templateObject6","AdditionalWrp","_templateObject7","LineDiv","_templateObject8","Img","_templateObject9","LinkBtn","_templateObject10","BackDiv","_templateObject11","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useParams","navigate","useNavigate","useEffect","fetchMovieDetails","movieDetails","finish","title","release_date","vote_average","overview","genres","poster_path","original_title","releaseDate","slice","userScore","Math","round","_jsxs","children","_jsx","onClick","FaArrowRotateLeft","Loader","src","alt","map","name","id","to","pathname","Suspense","fallback","Outlet"],"sourceRoot":""}